export { default as F } from "./ramda/es/F.js";
export { default as T } from "./ramda/es/T.js";
export { default as __ } from "./ramda/es/__.js";
export { default as add } from "./ramda/es/add.js";
export { default as addIndex } from "./ramda/es/addIndex.js";
export { default as adjust } from "./ramda/es/adjust.js";
export { default as all } from "./ramda/es/all.js";
export { default as allPass } from "./ramda/es/allPass.js";
export { default as always } from "./ramda/es/always.js";
export { default as and } from "./ramda/es/and.js";
export { default as any } from "./ramda/es/any.js";
export { default as anyPass } from "./ramda/es/anyPass.js";
export { default as ap } from "./ramda/es/ap.js";
export { default as aperture } from "./ramda/es/aperture.js";
export { default as append } from "./ramda/es/append.js";
export { default as apply } from "./ramda/es/apply.js";
export { default as applySpec } from "./ramda/es/applySpec.js";
export { default as applyTo } from "./ramda/es/applyTo.js";
export { default as ascend } from "./ramda/es/ascend.js";
export { default as assoc } from "./ramda/es/assoc.js";
export { default as assocPath } from "./ramda/es/assocPath.js";
export { default as binary } from "./ramda/es/binary.js";
export { default as bind } from "./ramda/es/bind.js";
export { default as both } from "./ramda/es/both.js";
export { default as call } from "./ramda/es/call.js";
export { default as chain } from "./ramda/es/chain.js";
export { default as clamp } from "./ramda/es/clamp.js";
export { default as clone } from "./ramda/es/clone.js";
export { default as collectBy } from "./ramda/es/collectBy.js";
export { default as comparator } from "./ramda/es/comparator.js";
export { default as complement } from "./ramda/es/complement.js";
export { default as compose } from "./ramda/es/compose.js";
export { default as composeWith } from "./ramda/es/composeWith.js";
export { default as concat } from "./ramda/es/concat.js";
export { default as cond } from "./ramda/es/cond.js";
export { default as construct } from "./ramda/es/construct.js";
export { default as constructN } from "./ramda/es/constructN.js";
export { default as converge } from "./ramda/es/converge.js";
export { default as count } from "./ramda/es/count.js";
export { default as countBy } from "./ramda/es/countBy.js";
export { default as curry } from "./ramda/es/curry.js";
export { default as curryN } from "./ramda/es/curryN.js";
export { default as dec } from "./ramda/es/dec.js";
export { default as defaultTo } from "./ramda/es/defaultTo.js";
export { default as descend } from "./ramda/es/descend.js";
export { default as difference } from "./ramda/es/difference.js";
export { default as differenceWith } from "./ramda/es/differenceWith.js";
export { default as dissoc } from "./ramda/es/dissoc.js";
export { default as dissocPath } from "./ramda/es/dissocPath.js";
export { default as divide } from "./ramda/es/divide.js";
export { default as drop } from "./ramda/es/drop.js";
export { default as dropLast } from "./ramda/es/dropLast.js";
export { default as dropLastWhile } from "./ramda/es/dropLastWhile.js";
export { default as dropRepeats } from "./ramda/es/dropRepeats.js";
export { d as dropRepeatsWith } from "./common/dropRepeatsWith-841a3509.js";
export { default as dropWhile } from "./ramda/es/dropWhile.js";
export { default as either } from "./ramda/es/either.js";
export { default as empty } from "./ramda/es/empty.js";
export { default as endsWith } from "./ramda/es/endsWith.js";
export { default as eqBy } from "./ramda/es/eqBy.js";
export { default as eqProps } from "./ramda/es/eqProps.js";
export { default as equals } from "./ramda/es/equals.js";
export { default as evolve } from "./ramda/es/evolve.js";
export { default as filter } from "./ramda/es/filter.js";
export { default as find } from "./ramda/es/find.js";
export { default as findIndex } from "./ramda/es/findIndex.js";
export { default as findLast } from "./ramda/es/findLast.js";
export { default as findLastIndex } from "./ramda/es/findLastIndex.js";
export { default as flatten } from "./ramda/es/flatten.js";
export { default as flip } from "./ramda/es/flip.js";
export { default as forEach } from "./ramda/es/forEach.js";
export { default as forEachObjIndexed } from "./ramda/es/forEachObjIndexed.js";
export { default as fromPairs } from "./ramda/es/fromPairs.js";
export { default as groupBy } from "./ramda/es/groupBy.js";
export { default as groupWith } from "./ramda/es/groupWith.js";
export { default as gt } from "./ramda/es/gt.js";
export { default as gte } from "./ramda/es/gte.js";
export { default as has } from "./ramda/es/has.js";
export { default as hasIn } from "./ramda/es/hasIn.js";
export { default as hasPath } from "./ramda/es/hasPath.js";
export { default as head } from "./ramda/es/head.js";
export { default as identical } from "./ramda/es/identical.js";
export { default as identity } from "./ramda/es/identity.js";
export { default as ifElse } from "./ramda/es/ifElse.js";
export { default as inc } from "./ramda/es/inc.js";
export { default as includes } from "./ramda/es/includes.js";
export { default as indexBy } from "./ramda/es/indexBy.js";
export { default as indexOf } from "./ramda/es/indexOf.js";
export { default as init } from "./ramda/es/init.js";
export { default as innerJoin } from "./ramda/es/innerJoin.js";
export { default as insert } from "./ramda/es/insert.js";
export { default as insertAll } from "./ramda/es/insertAll.js";
export { default as intersection } from "./ramda/es/intersection.js";
export { default as intersperse } from "./ramda/es/intersperse.js";
export { default as into } from "./ramda/es/into.js";
export { default as invert } from "./ramda/es/invert.js";
export { default as invertObj } from "./ramda/es/invertObj.js";
export { default as invoker } from "./ramda/es/invoker.js";
export { default as is } from "./ramda/es/is.js";
export { default as isEmpty } from "./ramda/es/isEmpty.js";
export { default as isNil } from "./ramda/es/isNil.js";
export { default as join } from "./ramda/es/join.js";
export { default as juxt } from "./ramda/es/juxt.js";
export { default as keys } from "./ramda/es/keys.js";
export { default as keysIn } from "./ramda/es/keysIn.js";
export { default as last } from "./ramda/es/last.js";
export { default as lastIndexOf } from "./ramda/es/lastIndexOf.js";
export { default as length } from "./ramda/es/length.js";
export { default as lens } from "./ramda/es/lens.js";
export { default as lensIndex } from "./ramda/es/lensIndex.js";
export { default as lensPath } from "./ramda/es/lensPath.js";
export { default as lensProp } from "./ramda/es/lensProp.js";
export { default as lift } from "./ramda/es/lift.js";
export { default as liftN } from "./ramda/es/liftN.js";
export { default as lt } from "./ramda/es/lt.js";
export { default as lte } from "./ramda/es/lte.js";
export { default as map } from "./ramda/es/map.js";
export { default as mapAccum } from "./ramda/es/mapAccum.js";
export { default as mapAccumRight } from "./ramda/es/mapAccumRight.js";
export { default as mapObjIndexed } from "./ramda/es/mapObjIndexed.js";
export { default as match } from "./ramda/es/match.js";
export { default as mathMod } from "./ramda/es/mathMod.js";
export { default as max } from "./ramda/es/max.js";
export { default as maxBy } from "./ramda/es/maxBy.js";
export { default as mean } from "./ramda/es/mean.js";
export { default as median } from "./ramda/es/median.js";
export { default as memoizeWith } from "./ramda/es/memoizeWith.js";
export { default as mergeAll } from "./ramda/es/mergeAll.js";
export { default as mergeDeepLeft } from "./ramda/es/mergeDeepLeft.js";
export { default as mergeDeepRight } from "./ramda/es/mergeDeepRight.js";
export { default as mergeDeepWith } from "./ramda/es/mergeDeepWith.js";
export { default as mergeDeepWithKey } from "./ramda/es/mergeDeepWithKey.js";
export { default as mergeLeft } from "./ramda/es/mergeLeft.js";
export { default as mergeRight } from "./ramda/es/mergeRight.js";
export { default as mergeWith } from "./ramda/es/mergeWith.js";
export { default as mergeWithKey } from "./ramda/es/mergeWithKey.js";
export { default as min } from "./ramda/es/min.js";
export { default as minBy } from "./ramda/es/minBy.js";
export { default as modify } from "./ramda/es/modify.js";
export { default as modifyPath } from "./ramda/es/modifyPath.js";
export { default as modulo } from "./ramda/es/modulo.js";
export { default as move } from "./ramda/es/move.js";
export { default as multiply } from "./ramda/es/multiply.js";
export { default as nAry } from "./ramda/es/nAry.js";
export { default as partialObject } from "./ramda/es/partialObject.js";
export { default as negate } from "./ramda/es/negate.js";
export { default as none } from "./ramda/es/none.js";
export { default as not } from "./ramda/es/not.js";
export { default as nth } from "./ramda/es/nth.js";
export { default as nthArg } from "./ramda/es/nthArg.js";
export { default as o } from "./ramda/es/o.js";
export { default as objOf } from "./ramda/es/objOf.js";
export { default as of } from "./ramda/es/of.js";
export { default as omit } from "./ramda/es/omit.js";
export { default as on } from "./ramda/es/on.js";
export { default as once } from "./ramda/es/once.js";
export { default as or } from "./ramda/es/or.js";
export { default as otherwise } from "./ramda/es/otherwise.js";
export { default as over } from "./ramda/es/over.js";
export { default as pair } from "./ramda/es/pair.js";
export { default as partial } from "./ramda/es/partial.js";
export { default as partialRight } from "./ramda/es/partialRight.js";
export { default as partition } from "./ramda/es/partition.js";
export { default as path } from "./ramda/es/path.js";
export { default as paths } from "./ramda/es/paths.js";
export { default as pathEq } from "./ramda/es/pathEq.js";
export { default as pathOr } from "./ramda/es/pathOr.js";
export { default as pathSatisfies } from "./ramda/es/pathSatisfies.js";
export { default as pick } from "./ramda/es/pick.js";
export { default as pickAll } from "./ramda/es/pickAll.js";
export { default as pickBy } from "./ramda/es/pickBy.js";
export { default as pipe } from "./ramda/es/pipe.js";
export { default as pipeWith } from "./ramda/es/pipeWith.js";
export { default as pluck } from "./ramda/es/pluck.js";
export { default as prepend } from "./ramda/es/prepend.js";
export { default as product } from "./ramda/es/product.js";
export { default as project } from "./ramda/es/project.js";
export { default as promap } from "./ramda/es/promap.js";
export { default as prop } from "./ramda/es/prop.js";
export { default as propEq } from "./ramda/es/propEq.js";
export { default as propIs } from "./ramda/es/propIs.js";
export { default as propOr } from "./ramda/es/propOr.js";
export { default as propSatisfies } from "./ramda/es/propSatisfies.js";
export { default as props } from "./ramda/es/props.js";
export { default as range } from "./ramda/es/range.js";
export { default as reduce } from "./ramda/es/reduce.js";
export { default as reduceBy } from "./ramda/es/reduceBy.js";
export { default as reduceRight } from "./ramda/es/reduceRight.js";
export { default as reduceWhile } from "./ramda/es/reduceWhile.js";
export { default as reduced } from "./ramda/es/reduced.js";
export { default as reject } from "./ramda/es/reject.js";
export { default as remove } from "./ramda/es/remove.js";
export { default as repeat } from "./ramda/es/repeat.js";
export { default as replace } from "./ramda/es/replace.js";
export { default as reverse } from "./ramda/es/reverse.js";
export { default as scan } from "./ramda/es/scan.js";
export { default as sequence } from "./ramda/es/sequence.js";
export { default as set } from "./ramda/es/set.js";
export { default as slice } from "./ramda/es/slice.js";
export { default as sort } from "./ramda/es/sort.js";
export { default as sortBy } from "./ramda/es/sortBy.js";
export { default as sortWith } from "./ramda/es/sortWith.js";
export { default as split } from "./ramda/es/split.js";
export { default as splitAt } from "./ramda/es/splitAt.js";
export { default as splitEvery } from "./ramda/es/splitEvery.js";
export { default as splitWhen } from "./ramda/es/splitWhen.js";
export { default as splitWhenever } from "./ramda/es/splitWhenever.js";
export { default as startsWith } from "./ramda/es/startsWith.js";
export { default as subtract } from "./ramda/es/subtract.js";
export { default as sum } from "./ramda/es/sum.js";
export { default as symmetricDifference } from "./ramda/es/symmetricDifference.js";
export { default as symmetricDifferenceWith } from "./ramda/es/symmetricDifferenceWith.js";
export { default as tail } from "./ramda/es/tail.js";
export { default as take } from "./ramda/es/take.js";
export { default as takeLast } from "./ramda/es/takeLast.js";
export { default as takeLastWhile } from "./ramda/es/takeLastWhile.js";
export { default as takeWhile } from "./ramda/es/takeWhile.js";
export { default as tap } from "./ramda/es/tap.js";
export { default as test } from "./ramda/es/test.js";
export { default as andThen } from "./ramda/es/andThen.js";
export { default as times } from "./ramda/es/times.js";
export { default as toLower } from "./ramda/es/toLower.js";
export { default as toPairs } from "./ramda/es/toPairs.js";
export { default as toPairsIn } from "./ramda/es/toPairsIn.js";
export { default as toString } from "./ramda/es/toString.js";
export { default as toUpper } from "./ramda/es/toUpper.js";
export { default as transduce } from "./ramda/es/transduce.js";
export { default as transpose } from "./ramda/es/transpose.js";
export { default as traverse } from "./ramda/es/traverse.js";
export { default as trim } from "./ramda/es/trim.js";
export { default as tryCatch } from "./ramda/es/tryCatch.js";
export { default as type } from "./ramda/es/type.js";
export { default as unapply } from "./ramda/es/unapply.js";
export { default as unary } from "./ramda/es/unary.js";
export { default as uncurryN } from "./ramda/es/uncurryN.js";
export { default as unfold } from "./ramda/es/unfold.js";
export { default as union } from "./ramda/es/union.js";
export { default as unionWith } from "./ramda/es/unionWith.js";
export { default as uniq } from "./ramda/es/uniq.js";
export { default as uniqBy } from "./ramda/es/uniqBy.js";
export { default as uniqWith } from "./ramda/es/uniqWith.js";
export { default as unless } from "./ramda/es/unless.js";
export { default as unnest } from "./ramda/es/unnest.js";
export { default as until } from "./ramda/es/until.js";
export { default as unwind } from "./ramda/es/unwind.js";
export { default as update } from "./ramda/es/update.js";
export { default as useWith } from "./ramda/es/useWith.js";
export { default as values } from "./ramda/es/values.js";
export { default as valuesIn } from "./ramda/es/valuesIn.js";
export { default as view } from "./ramda/es/view.js";
export { default as when } from "./ramda/es/when.js";
export { default as where } from "./ramda/es/where.js";
export { default as whereAny } from "./ramda/es/whereAny.js";
export { default as whereEq } from "./ramda/es/whereEq.js";
export { default as without } from "./ramda/es/without.js";
export { default as xor } from "./ramda/es/xor.js";
export { default as xprod } from "./ramda/es/xprod.js";
export { default as zip } from "./ramda/es/zip.js";
export { default as zipObj } from "./ramda/es/zipObj.js";
export { default as zipWith } from "./ramda/es/zipWith.js";
export { default as thunkify } from "./ramda/es/thunkify.js";
import "./common/_curry2-21fa898b.js";
import "./common/_curry1-a6784b40.js";
import "./common/_isPlaceholder-69544913.js";
import "./common/_concat-9dee354c.js";
import "./common/_curry3-716aebc1.js";
import "./common/_xfBase-47118e3a.js";
import "./common/_isArray-3f7112bf.js";
import "./common/_isTransformer-816ffbd7.js";
import "./common/_reduced-43259614.js";
import "./common/_reduce-6079ab80.js";
import "./common/_isArrayLike-9455bd24.js";
import "./common/_isString-bd8a5e0f.js";
import "./common/_has-ef506577.js";
import "./common/_isInteger-6ed45b32.js";
import "./common/_assoc-b7e88c54.js";
import "./common/_arity-fefc01f2.js";
import "./common/_isFunction-f2ef089d.js";
import "./common/_makeFlat-50135e4b.js";
import "./common/_clone-7429370f.js";
import "./common/_cloneRegExp-a38a2fe4.js";
import "./common/_map-855e0a50.js";
import "./common/_curryN-f6b52a3c.js";
import "./common/_Set-d915dfa1.js";
import "./common/_includes-6b736d1d.js";
import "./common/_indexOf-a6922268.js";
import "./common/_includesWith-ddfe560f.js";
import "./common/_isArguments-6faa657b.js";
import "./common/_isObject-755da5cf.js";
import "./common/_objectIs-99c5251f.js";
import "./common/_filter-40fab1d6.js";
import "./common/_checkForMethod-9f9acae8.js";
import "./common/_identity-7918716e.js";
import "./common/_objectAssign-4e7711ea.js";
import "./common/_isNumber-30ee9efb.js";
import "./common/_complement-ae234b25.js";
import "./common/_assertPromise-2ee5312b.js";
import "./common/_toString-2b74d5dd.js";
import "./common/_createPartialApplicator-0d3fa0f6.js";
export default null;
